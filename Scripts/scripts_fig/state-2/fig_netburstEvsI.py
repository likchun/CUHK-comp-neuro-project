from preamble import *
from mylib import err_prop_2arr_muldiv


gEs = [.08, .1, .16, .2, .3, .36, .4]
xlim1 = (.4*1.03, .08-.4*.03)
xticks1 = [.4,.3,.2,.1,.08]
xticklabels1 = [.4,.3,.2,"",.08]

gIs = [0, .2, .4, .6, 1, 2, 4, 6, 8]
xlim2 = (8*-0.03, 8*1.03)
xticks2 = [0, 1, 2, 4, 6, 8]


results_E1 = np.load(os.path.join(data_path.DA_state2_netburst, "data_netburstExc,gI02.npy"), allow_pickle=True)
mean_fr_E1 = np.array(results_E1[0], dtype=float)
num_netburst_E1 = np.array(results_E1[1], dtype=int)
freq_nb_E1 = np.array(results_E1[2], dtype=float)
mean_INBI_ms_E1 = np.array(results_E1[3], dtype=float)
std_INBI_ms_E1 = np.array(results_E1[4], dtype=float)
mean_K_nb_E1 = np.array(results_E1[5], dtype=float)
std_K_nb_E1 = np.array(results_E1[6], dtype=float)
mean_Nactive_nb_0_E1 = np.array(results_E1[7], dtype=float)
std_Nactive_nb_0_E1 = np.array(results_E1[8], dtype=float)
mean_Nactive_nb_1_E1 = np.array(results_E1[9], dtype=float)
std_Nactive_nb_1_E1 = np.array(results_E1[10], dtype=float)
mean_Nactive_nb_2_E1 = np.array(results_E1[11], dtype=float)
std_Nactive_nb_2_E1 = np.array(results_E1[12], dtype=float)
mean_T_nb_03_E1 = np.array(results_E1[13], dtype=float)
std_T_nb_03_E1 = np.array(results_E1[14], dtype=float)
mean_T_nb_04_E1 = np.array(results_E1[15], dtype=float)
std_T_nb_04_E1 = np.array(results_E1[16], dtype=float)
mean_T_nb_05_E1 = np.array(results_E1[17], dtype=float)
std_T_nb_05_E1 = np.array(results_E1[18], dtype=float)

results_E2 = np.load(os.path.join(data_path.DA_state2_netburst, "data_netburstExc,gI06.npy"), allow_pickle=True)
mean_fr_E2 = np.array(results_E2[0], dtype=float)
num_netburst_E2 = np.array(results_E2[1], dtype=int)
freq_nb_E2 = np.array(results_E2[2], dtype=float)
mean_INBI_ms_E2 = np.array(results_E2[3], dtype=float)
std_INBI_ms_E2 = np.array(results_E2[4], dtype=float)
mean_K_nb_E2 = np.array(results_E2[5], dtype=float)
std_K_nb_E2 = np.array(results_E2[6], dtype=float)
mean_Nactive_nb_0_E2 = np.array(results_E2[7], dtype=float)
std_Nactive_nb_0_E2 = np.array(results_E2[8], dtype=float)
mean_Nactive_nb_1_E2 = np.array(results_E2[9], dtype=float)
std_Nactive_nb_1_E2 = np.array(results_E2[10], dtype=float)
mean_Nactive_nb_2_E2 = np.array(results_E2[11], dtype=float)
std_Nactive_nb_2_E2 = np.array(results_E2[12], dtype=float)
mean_T_nb_03_E2 = np.array(results_E2[13], dtype=float)
std_T_nb_03_E2 = np.array(results_E2[14], dtype=float)
mean_T_nb_04_E2 = np.array(results_E2[15], dtype=float)
std_T_nb_04_E2 = np.array(results_E2[16], dtype=float)
mean_T_nb_05_E2 = np.array(results_E2[17], dtype=float)
std_T_nb_05_E2 = np.array(results_E2[18], dtype=float)

results_I = np.load(os.path.join(data_path.DA_state2_netburst, "data_netburstInh,gE02.npy"), allow_pickle=True)
mean_fr_I = np.array(results_I[0], dtype=float)
num_netburst_I = np.array(results_I[1], dtype=int)
freq_nb_I = np.array(results_I[2], dtype=float)
mean_INBI_ms_I = np.array(results_I[3], dtype=float)
std_INBI_ms_I = np.array(results_I[4], dtype=float)
mean_K_nb_I = np.array(results_I[5], dtype=float)
std_K_nb_I = np.array(results_I[6], dtype=float)
mean_Nactive_nb_0_I = np.array(results_I[7], dtype=float)
std_Nactive_nb_0_I = np.array(results_I[8], dtype=float)
mean_Nactive_nb_1_I = np.array(results_I[9], dtype=float)
std_Nactive_nb_1_I = np.array(results_I[10], dtype=float)
mean_Nactive_nb_2_I = np.array(results_I[11], dtype=float)
std_Nactive_nb_2_I = np.array(results_I[12], dtype=float)
mean_T_nb_03_I = np.array(results_I[13], dtype=float)
std_T_nb_03_I = np.array(results_I[14], dtype=float)
mean_T_nb_04_I = np.array(results_I[15], dtype=float)
std_T_nb_04_I = np.array(results_I[16], dtype=float)
mean_T_nb_05_I = np.array(results_I[17], dtype=float)
std_T_nb_05_I = np.array(results_I[18], dtype=float)


fig, axes = plt.subplots(2, 2, figsize=[9,9])

ax00tw = axes[0][0].twiny()
axes[0][0].plot(gIs, freq_nb_I, "o-", color="navy", ms=myMarkerSize0)
ax00tw.plot(gEs, freq_nb_E1, "s-", color="orangered", ms=myMarkerSize0)
ax00tw.plot(gEs, freq_nb_E2, "d-", color="m", ms=myMarkerSize0)
axes[0][0].set(xlabel="$g_I$", ylabel="$f_{nb}$")
ax00tw.set_xlabel("$g_E$", labelpad=15)
axes[0][0].set(xlim=xlim2, xticks=xticks2, ylim=(0,14), yticks=[0,2,4,6,8,10,12,14])
ax00tw.set(xlim=xlim1, xticks=xticks1, xticklabels=xticklabels1)

ax01tw = axes[0][1].twiny()
axes[0][1].errorbar(gIs, mean_INBI_ms_I, std_INBI_ms_I, fmt="o-", color="navy", ms=myMarkerSize0, capsize=4, label="peak-dist.")
ax01tw.errorbar(gEs, mean_INBI_ms_E1, std_INBI_ms_E1, fmt="s-", color="orangered", ms=myMarkerSize0, capsize=4, label="peak-dist.")
ax01tw.errorbar(gEs, mean_INBI_ms_E2, std_INBI_ms_E2, fmt="d-", color="m", ms=myMarkerSize0, capsize=4, label="peak-dist.")
axes[0][1].set(xlabel="$g_I$", ylabel="INBI (ms)")
ax01tw.set_xlabel("$g_E$", labelpad=15)
ax01tw.set(xlim=xlim1, xticks=xticks1, xticklabels=xticklabels1)
axes[0][1].set(xlim=xlim2, xticks=xticks2)
axes[0][1].set(ylim=(0,300), yticks=[0,50,100,150,200,250,300])

ax10tw = axes[1][0].twiny()
axes[1][0].errorbar(gIs, mean_Nactive_nb_0_I/1000, std_Nactive_nb_0_I/1000, fmt="o-", color="navy", ms=myMarkerSize0, capsize=4, label="")
ax10tw.errorbar(gEs, mean_Nactive_nb_0_E1/1000, std_Nactive_nb_0_E1/1000, fmt="s-", color="orangered", ms=myMarkerSize0, capsize=4, label="")
ax10tw.errorbar(gEs, mean_Nactive_nb_0_E2/1000, std_Nactive_nb_0_E2/1000, fmt="d-", color="m", ms=myMarkerSize0, capsize=4, label="")
axes[1][0].set(xlabel="$g_I$", ylabel="participation frac.")
ax10tw.set_xlabel("$g_E$", labelpad=15)
ax10tw.set(xlim=xlim1, xticks=xticks1, xticklabels=xticklabels1)
axes[1][0].set(xlim=xlim2, xticks=xticks2)
axes[1][0].set(ylim=(0,1111/1000), yticks=[0,.2,.4,.6,.8,1.])

ax11tw = axes[1][1].twiny()
axes[1][1].errorbar(gIs, mean_T_nb_04_I, std_T_nb_04_I, fmt="x-", color="navy", ms=myMarkerSize0, capsize=4, label="0.4")
ax11tw.errorbar(gEs, mean_T_nb_04_E1, std_T_nb_04_E1, fmt="x-", color="orangered", ms=myMarkerSize0, capsize=4, label="0.4")
ax11tw.errorbar(gEs, mean_T_nb_04_E2, std_T_nb_04_E2, fmt="x-", color="m", ms=myMarkerSize0, capsize=4, label="0.4")
axes[1][1].set(xlabel="$g_I$", ylabel="$w_{nb}$ (ms)")
ax11tw.set_xlabel("$g_E$", labelpad=15)
ax11tw.set(xlim=xlim1, xticks=xticks1, xticklabels=xticklabels1)
axes[1][1].set(xlim=xlim2, xticks=xticks2)
axes[1][1].set(ylim=(0,100), yticks=[0,20,40,60,80,100])

axes[0][0].text(-.25,1.1, "(a)", transform=axes[0][0].transAxes)
axes[0][1].text(-.25,1.1, "(b)", transform=axes[0][1].transAxes)
fig.tight_layout()
axes[1][0].text(-.25,1.1, "(c)", transform=axes[1][0].transAxes)
axes[1][1].text(-.25,1.1, "(d)", transform=axes[1][1].transAxes)

# plt.show()
fig.savefig("fig_netburstEvsI.pdf", dpi=400)
fig.savefig("fig_netburstEvsI.png", dpi=400)